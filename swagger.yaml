openapi: 3.0.3
info:
  title: EasyCook API
  version: 1.0.0
  description: API для работы с рецептами, генерации списка покупок, планирования питания и расчёта калорийности.

servers:
  - url: http://localhost:5000
    description: Локальный сервер
  - url: <YOUR_NGROK_URL>
    description: Публичный сервер через ngrok

tags:
  - name: Recipes
    description: Работа с рецептами (создание, просмотр, отправка)
  - name: External API
    description: Интеграция с Spoonacular API
  - name: Meal Planner
    description: Формирование плана питания
  - name: Nutrition
    description: Расчёт калорийности и БЖУ
  - name: Shopping List
    description: Генерация списка покупок

paths:
  /:
    get:
      summary: Главная страница
      description: Приветственная страница с ссылками на все эндпоинты
      responses:
        '200':
          description: HTML главной страницы
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/HTMLResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /recipes:
    get:
      tags: [Recipes]
      summary: Получить список всех рецептов
      responses:
        '200':
          description: Список рецептов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
        '404':
          description: Рецепты не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /recipes/{recipe_id}:
    get:
      tags: [Recipes]
      summary: Получить рецепт по ID
      parameters:
        - name: recipe_id
          in: path
          required: true
          schema:
            type: integer
          description: ID рецепта для поиска
      responses:
        '200':
          description: Рецепт найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        '404':
          description: Рецепт не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /recipes/add:
    get:
      tags: [Recipes]
      summary: Форма для добавления нового рецепта
      responses:
        '200':
          description: HTML-форма добавления рецепта
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/HTMLResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags: [Recipes]
      summary: Добавить новый рецепт
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        '201':
          description: Рецепт успешно добавлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Ошибка при добавлении рецепта
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /recipes/share:
    post:
      tags: [Recipes]
      summary: Отправить рецепт другу
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShareRequest'
      responses:
        '200':
          description: Рецепт успешно отправлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Ошибка в запросе (например, отсутствует email)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /recipes/external/random:
    get:
      tags: [External API]
      summary: Получить случайный рецепт из Spoonacular
      responses:
        '200':
          description: Случайный рецепт найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        '404':
          description: Рецепт не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Ошибка при запросе к Spoonacular
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /meal-planner:
    get:
      tags: [Meal Planner]
      summary: План питания на день
      responses:
        '200':
          description: Сформированный план питания
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MealPlan'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /nutrition:
    get:
      tags: [Nutrition]
      summary: Форма для ввода ID рецептов для расчёта калорийности
      responses:
        '200':
          description: HTML-форма
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/HTMLResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags: [Nutrition]
      summary: Расчёт калорийности и БЖУ выбранных рецептов
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NutritionRequest'
      responses:
        '200':
          description: Результаты расчёта калорийности
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NutritionResult'
        '404':
          description: Рецепты не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /shopping-list:
    get:
      tags: [Shopping List]
      summary: Форма для ввода ID рецептов для последующей генерации списка покупок
      responses:
        '200':
          description: HTML-форма
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/HTMLResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags: [Shopping List]
      summary: Сформировать список покупок
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShoppingListRequest'
      responses:
        '200':
          description: Список покупок сформирован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingList'
        '400':
          description: Ошибка в списке ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Рецепты не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Recipe:
      type: object
      required:
        - recipe_id
        - recipe_name
        - recipe_ingredients
      properties:
        recipe_id:
          type: integer
          example: 1
        recipe_name:
          type: string
          example: "Паста Карбонара"
        recipe_type:
          type: string
          example: "Основное блюдо"
        recipe_ingredients:
          type: string
          example: "спагетти, яйца, бекон, сыр пармезан"
        recipe_time:
          type: string
          example: "25 минут"

    ShoppingListRequest:
      type: object
      required:
        - recipe_ids
      properties:
        recipe_ids:
          type: string
          example: "1,2,5"

    ShoppingList:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
          example: ["спагетти", "яйца", "бекон", "сыр пармезан"]

    NutritionRequest:
      type: object
      required:
        - recipe_ids
      properties:
        recipe_ids:
          type: string
          example: "3,4,6"

    NutritionResult:
      type: object
      properties:
        total_calories:
          type: number
          example: 1540
        proteins:
          type: number
          example: 85
        fats:
          type: number
          example: 60
        carbohydrates:
          type: number
          example: 130

    MealPlan:
      type: object
      properties:
        breakfast:
          type: string
          example: "Овсянка с фруктами"
        lunch:
          type: string
          example: "Салат Цезарь"
        dinner:
          type: string
          example: "Паста Болоньезе"

    ShareRequest:
      type: object
      required:
        - recipe_id
        - email
      properties:
        recipe_id:
          type: integer
          example: 7
        email:
          type: string
          example: "friend@example.com"

    HTMLResponse:
      type: object
      properties:
        content:
          type: string
          example: "<html><body><h1>Добро пожаловать в EasyCook!</h1></body></html>"

    SuccessResponse:
      type: object
      properties:
        message:
          type: string
          example: "Операция выполнена успешно"

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Внутренняя ошибка сервера"
