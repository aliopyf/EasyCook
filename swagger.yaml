openapi: 3.0.3
info:
  title: EasyCook API
  version: 1.0.0
  description: API для работы с рецептами, генерации списка покупок, планирования питания и расчёта калорийности.

servers:
  - url: http://localhost:5000
    description: Локальный сервер
  - url: <YOUR_NGROK_URL>
    description: Публичный сервер через ngrok

paths:
  /:
    get:
      tags:
        - General
      summary: Главная страница
      description: Приветственная страница с ссылками на все эндпоинты
      responses:
        '200':
          description: HTML главной страницы
        '500':
          description: Внутренняя ошибка сервера

  /recipes:
    get:
      tags:
        - Recipes
      summary: Получить список всех рецептов
      parameters:
        - name: search
          in: query
          required: false
          schema:
            type: string
          description: Поисковый запрос по названию рецепта
        - name: type
          in: query
          required: false
          schema:
            type: string
          description: Фильтр по типу блюда (например, "завтрак", "ужин")
      responses:
        '200':
          description: Список рецептов найден
        '404':
          description: Рецепты не найдены
        '500':
          description: Внутренняя ошибка сервера

  /recipes/{recipe_id}:
    get:
      tags:
        - Recipes
      summary: Получить рецепт по ID
      parameters:
        - name: recipe_id
          in: path
          required: true
          schema:
            type: integer
          description: Уникальный ID рецепта
      responses:
        '200':
          description: Рецепт найден
        '404':
          description: Рецепт не найден
        '500':
          description: Ошибка при запросе к базе данных

  /recipes/add:
    get:
      tags:
        - Recipes
      summary: Получить HTML-форму для добавления рецепта
      responses:
        '200':
          description: HTML-форма для добавления нового рецепта
        '500':
          description: Ошибка при загрузке формы
    post:
      tags:
        - Recipes
      summary: Добавить новый рецепт
      parameters:
        - name: recipe_id
          in: query
          required: true
          schema:
            type: integer
          description: Уникальный ID рецепта
        - name: recipe_name
          in: query
          required: true
          schema:
            type: string
          description: Название рецепта
        - name: recipe_type
          in: query
          required: false
          schema:
            type: string
          description: Категория блюда
        - name: recipe_ingredients
          in: query
          required: true
          schema:
            type: string
          description: Список ингредиентов через запятую
        - name: recipe_time
          in: query
          required: false
          schema:
            type: string
          description: Время приготовления
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                recipe_id:
                  type: integer
                recipe_name:
                  type: string
                recipe_type:
                  type: string
                recipe_ingredients:
                  type: string
                recipe_time:
                  type: string
              required:
                - recipe_id
                - recipe_name
                - recipe_ingredients
      responses:
        '200':
          description: Рецепт успешно добавлен
        '400':
          description: Ошибка при добавлении рецепта
        '500':
          description: Ошибка при сохранении в базу

  /recipes/share:
    get:
      tags:
        - Sharing Service
      summary: Отправить рецепт другому пользователю
      parameters:
        - name: recipe_id
          in: query
          required: true
          schema:
            type: integer
          description: ID рецепта для отправки
        - name: recipient
          in: query
          required: true
          schema:
            type: string
          description: Email или идентификатор получателя
      responses:
        '200':
          description: Рецепт успешно отправлен
        '400':
          description: Не указан recipe_id или recipient
        '404':
          description: Рецепт не найден
        '500':
          description: Ошибка сервера при отправке

  /recipes/external/random:
    get:
      tags:
        - External Recipes
      summary: Получить случайный рецепт из Spoonacular API
      parameters:
        - name: tags
          in: query
          required: false
          schema:
            type: string
          description: Тематические теги для фильтрации (например, "vegetarian,dessert")
      responses:
        '200':
          description: Случайный рецепт найден
        '400':
          description: Некорректный запрос
        '404':
          description: Рецепт не найден
        '500':
          description: Ошибка при обращении к Spoonacular API

  /meal-planner:
    get:
      tags:
        - Meal Planner
      summary: Получить план питания на день
      parameters:
        - name: calories
          in: query
          required: false
          schema:
            type: integer
          description: Целевая калорийность
        - name: diet
          in: query
          required: false
          schema:
            type: string
          description: Тип диеты (например, "vegan", "keto")
      responses:
        '200':
          description: План питания сгенерирован
        '404':
          description: Нет подходящих рецептов
        '500':
          description: Ошибка при генерации плана

  /nutrition:
    get:
      tags:
        - Nutrition
      summary: Получить форму для расчёта калорийности
      responses:
        '200':
          description: HTML-форма для расчёта
        '500':
          description: Ошибка сервера
    post:
      tags:
        - Nutrition
      summary: Расчёт калорийности и БЖУ рецептов
      parameters:
        - name: recipe_ids
          in: query
          required: true
          schema:
            type: string
          description: Список ID рецептов через запятую, например "1,2,3"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                recipe_ids:
                  type: string
              required:
                - recipe_ids
      responses:
        '200':
          description: Результаты расчёта калорийности
        '400':
          description: Не указаны ID рецептов
        '404':
          description: Рецепты не найдены
        '500':
          description: Ошибка при расчёте

  /shopping-list:
    get:
      tags:
        - Shopping List
      summary: Получить форму для генерации списка покупок
      responses:
        '200':
          description: HTML-форма
        '500':
          description: Ошибка сервера
    post:
      tags:
        - Shopping List
      summary: Сформировать список покупок по рецептам
      parameters:
        - name: recipe_ids
          in: query
          required: true
          schema:
            type: string
          description: Список ID рецептов через запятую, например "1,2,3"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                recipe_ids:
                  type: string
              required:
                - recipe_ids
      responses:
        '200':
          description: Список покупок успешно сформирован
        '400':
          description: Не указаны ID рецептов
        '404':
          description: Рецепты не найдены
        '500':
          description: Ошибка при формировании списка
